// Code generated by protoc-gen-go. DO NOT EDIT.
// source: apiKey.proto

package nan0

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ApiKey struct {
	EncKey               []byte   `protobuf:"bytes,1,opt,name=encKey,proto3" json:"encKey,omitempty"`
	HmacKey              []byte   `protobuf:"bytes,2,opt,name=hmacKey,proto3" json:"hmacKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApiKey) Reset()         { *m = ApiKey{} }
func (m *ApiKey) String() string { return proto.CompactTextString(m) }
func (*ApiKey) ProtoMessage()    {}
func (*ApiKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_7154450ccdebfd8b, []int{0}
}

func (m *ApiKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiKey.Unmarshal(m, b)
}
func (m *ApiKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiKey.Marshal(b, m, deterministic)
}
func (m *ApiKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiKey.Merge(m, src)
}
func (m *ApiKey) XXX_Size() int {
	return xxx_messageInfo_ApiKey.Size(m)
}
func (m *ApiKey) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiKey.DiscardUnknown(m)
}

var xxx_messageInfo_ApiKey proto.InternalMessageInfo

func (m *ApiKey) GetEncKey() []byte {
	if m != nil {
		return m.EncKey
	}
	return nil
}

func (m *ApiKey) GetHmacKey() []byte {
	if m != nil {
		return m.HmacKey
	}
	return nil
}

func init() {
	proto.RegisterType((*ApiKey)(nil), "nan0.ApiKey")
}

func init() { proto.RegisterFile("apiKey.proto", fileDescriptor_7154450ccdebfd8b) }

var fileDescriptor_7154450ccdebfd8b = []byte{
	// 118 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x2c, 0xc8, 0xf4,
	0x4e, 0xad, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4b, 0xcc, 0x33, 0x50, 0xb2,
	0xe2, 0x62, 0x73, 0x04, 0x8b, 0x0a, 0x89, 0x71, 0xb1, 0xa5, 0xe6, 0x25, 0x7b, 0xa7, 0x56, 0x4a,
	0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x04, 0x41, 0x79, 0x42, 0x12, 0x5c, 0xec, 0x19, 0xb9, 0x89, 0x60,
	0x09, 0x26, 0xb0, 0x04, 0x8c, 0xeb, 0xa4, 0xc1, 0x25, 0x99, 0x9c, 0x9f, 0xab, 0x97, 0x9d, 0x9f,
	0x92, 0x5a, 0x5c, 0x90, 0x5f, 0x54, 0xa2, 0x97, 0x05, 0x32, 0x12, 0x62, 0xbc, 0x13, 0x2b, 0x98,
	0x13, 0x05, 0xb6, 0x25, 0x89, 0x0d, 0x2c, 0x66, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xa5, 0xe4,
	0x5f, 0xec, 0x82, 0x00, 0x00, 0x00,
}
